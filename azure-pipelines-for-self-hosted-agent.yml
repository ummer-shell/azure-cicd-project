# Starter pipeline    
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- main


# Agent pool name
pool: myAgentPool

variables:
  # Service connection name as used in the DevOps project settings
  azureServiceConnectionId: 'Flask-ML-Project'
  
  # Specify the value of the existing Web App name
  webAppName: 'udacity-flask-cicd-project'

  # Environment name
  environmentName: 'udacity-flask-cicd'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: myAgentPool
    steps:    
    - script: |
        python3.7 -m pip install --upgrade pip
        python3.7 -m pip install setup
        python3.7 -m pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: 'myStep 1'
    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
      workingDirectory: $(projectRoot)
      displayName: 'myStep 2'
    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
        make lint
      workingDirectory: $(projectRoot)
      displayName:  'myStep 3 - Run lint tests'
    - task: ArchiveFiles@2
      displayName: 'myStep 4 - Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'myStep 5 - Upload package'
      artifact: drop
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure subscription 1(d0fd2faf-9bc6-44b3-9ac1-311b375ed847)'
        appType: 'webAppLinux'
        WebAppName: 'udacity-flask-cicd-project'
        deployToSlotOrASE: true
        ResourceGroupName: 'azure-cicd-project'
        SlotName: 'production'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
